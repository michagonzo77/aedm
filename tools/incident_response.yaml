tools:
  - name: incident-response
    alias: incident-response
    description: Create a service ticket in Freshservice, extract the ticket ID, and send a formatted incident message to a Slack channel.
    type: bash
    content: |
      #!/bin/bash

      # Install necessary dependencies including Slack CLI
      apk update > /dev/null && apk add -q wget unzip curl jq libc6-compat > /dev/null
      wget -q https://downloads.slack-edge.com/slack-cli/slack-cli-linux-amd64.tgz -O /tmp/slack-cli.tgz && tar -xzf /tmp/slack-cli.tgz -C /usr/local/bin

      # Function to create a service ticket
      create_ticket() {
          local url="https://aenetworks-fs-sandbox.freshservice.com/api/v2/tickets"
          local description="$1"
          local servicename="$2"
          local title="$3"
          local incident_url="$4"
          local slackincidentcommander="$5"
          local slackdetectionmethod="$6"
          local slackbusinessimpact="$7"
          local incident_id="$8"
          local payload="{\"description\": \"$description</br><strong>Incident Commander:</strong>$slackincidentcommander</br><strong>Detection Method:</strong>$slackdetectionmethod</br><strong>Business Impact:</strong>$slackbusinessimpact</br><strong>Ticket Link:</strong>$incident_url\", \"subject\": \"TESTING $servicename - $title\", \"email\": \"devsecops@aenetworks.com\", \"priority\": 1, \"status\": 2, \"source\": 8, \"category\": \"DevOps\", \"sub_category\": \"Pageout\", \"tags\": [\"PDID_$incident_id\"]}"
          curl -u $FSAPI_SANDBOX:X -H "Content-Type: application/json" -X POST -d "$payload" -o response.json "$url"
      }

      # Function to extract ticket ID from response
      extract_ticket_id() {
          local ticket_id=$(jq -r '.ticket.id' response.json)
          echo "$ticket_id"
      }

      # Main code

      # Assign arguments to variables
      slackdescription="$1"
      slackincidentcommander="$2"
      slackdetectionmethod="$3"
      slackbusinessimpact="$4"
      servicename="$5"
      title="$6"
      incident_url="$7"
      incident_id="$8"
      bridge_url="$9"

      # Create service ticket
      create_ticket "$slackdescription" "$servicename" "$title" "$incident_url" "$slackincidentcommander" "$slackdetectionmethod" "$slackbusinessimpact" "$incident_id"

      # Extract ticket ID
      TICKET_ID=$(extract_ticket_id)

      # Export TICKET_ID as an environment variable
      export TICKET_ID

      # Generate ticket URL
      TICKET_URL="https://aenetworks-fs-sandbox.freshservice.com/a/tickets/$TICKET_ID"

      # Format the message
      MESSAGE=$(cat <<EOF
      ************** SEV 1 ****************
      @U074TSUMZEJ
      Incident Commander: $slackincidentcommander
      Detection Method: $slackdetectionmethod
      Business Impact: $slackbusinessimpact
      Bridge Link: <$bridge_url|Bridge Link>
      Pagerduty Incident URL: $incident_url
      FS Ticket URL: $TICKET_URL
      We will keep everyone posted on this channel as we assess the issue further.
      EOF
      )

      # Export MESSAGE as an environment variable
      export MESSAGE

      # Send the message to the Slack channel
      slack send-message '#kubiya_testing' "$MESSAGE"

    args:
      slackdescription:
        description: Description of the incident from Slack
        required: true
      slackincidentcommander:
        description: Name of the incident commander
        required: true
      slackdetectionmethod:
        description: Method of incident detection
        required: true
      slackbusinessimpact:
        description: Business impact of the incident
        required: true
      servicename:
        description: Name of the service involved in the incident
        required: true
      title:
        description: Title of the incident
        required: true
      incident_url:
        description: URL of the incident
        required: true
      incident_id:
        description: ID of the incident
        required: true
      bridge_url:
        description: URL of the incident bridge
        required: true
    env:
      - FSAPI_SANDBOX