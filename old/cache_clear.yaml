tools:
  - name: fastly-cache-clear
    description: Clears the cache of different Fastly services.
    type: python
    content: |
      import os
      import sys
      import requests

      # Define the allowed brands and platforms as strings
      brands = ["aenetworks", "aetv", "biography", "crimecentral", "crimeandinvestigation", "fyi", "history", "historyvault", "historyvaultca", "lifetime", "lifetimemovies", "lmc"]
      platforms = ["android", "androidtv", "appletv", "firetv", "ios", "kepler", "roku", "tizen", "tvos", "vizio", "web", "webos", "weblanding", "xclass"]

      # Define the services and their IDs as a dictionary
      services = {
          "dev-yoga": "28NWcDuK7eJuohc8s3bxwr",
          "qa-yoga": "29I6lUZbicNV0kVv07zN7V",
          "prod-yoga": "2AAgt7ZaOboH1ftYfE1Fxu"
      }

      def clear_cache(service_name, key):
          if service_name not in services:
              print(f"Invalid service name. Available services: {', '.join(services.keys())}")
              sys.exit(1)

          if key not in brands and key not in platforms:
              print(f"Invalid key. Provide a valid brand or platform key.")
              sys.exit(1)

          service_id = services[service_name]
          api_token = os.getenv("FASTLY_API_TOKEN")

          if not api_token:
              print("FASTLY_API_TOKEN environment variable is not set.")
              sys.exit(1)

          url = f"https://api.fastly.com/service/{service_id}/purge/{key}"
          headers = {
              "Fastly-Key": api_token,
              "Accept": "application/json"
          }

          response = requests.post(url, headers=headers)
          
          if response.status_code == 200:
              print("Purge request was successful.")
          else:
              print(f"Purge request failed with status code {response.status_code}. Response: {response.text}")

      if __name__ == "__main__":
          service_name = "{{.service_name}}"
          key = "{{.key}}"
          clear_cache(service_name, key)
    args:
      service_name:
        description: The name of the service to purge (e.g., dev-yoga, qa-yoga, prod-yoga)
        required: true
      key:
        description: The brand (e.g., "aenetworks", "aetv", "biography", "crimecentral", "crimeandinvestigation", "fyi", "history", "historyvault", "historyvaultca", "lifetime", "lifetimemovies", "lmc") or platform (e.g., "android", "androidtv", "appletv", "firetv", "ios", "kepler", "roku", "tizen", "tvos", "vizio", "web", "webos", "weblanding", "xclass") to purge
        required: true
    dependencies: |
      requests
    env:
      - FASTLY_API_TOKEN